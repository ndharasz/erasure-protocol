{
  "contractName": "SimpleGriefingWithFees",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokensToRedeem",
          "type": "uint256"
        }
      ],
      "name": "redeemStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum SimpleGriefingWithFees.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50613bc9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806372b45a55116100b8578063c529ebfd1161007c578063c529ebfd14610617578063e7f43c6814610688578063ed251a42146106d2578063ee57e36f14610811578063eedad66b146108cc578063fc0e3d90146108fa57610142565b806372b45a551461040f578063754b27071461045957806388cc58e4146104c657806390bfe0bf14610510578063a9fb763c146105e957610142565b80632ab6f8db1161010a5780632ab6f8db1461028e578063465b414e146102985780635ad3f918146102f15780635baeb806146103625780635c48c1fa146103bb578063728fa494146103c557610142565b80630ee2cb101461014757806310ff994d146101915780631723537d146101bf57806321df0da7146101eb57806329605e771461024a575b600080fd5b61014f610918565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bd600480360360208110156101a757600080fd5b81019080803590602001909291905050506109f9565b005b6101c7610cef565b604051808260018111156101d757fe5b60ff16815260200191505060405180910390f35b6101f3610d18565b6040518083600281111561020357fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61028c6004803603602081101561026057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5d565b005b610296610de4565b005b6102db600480360360608110156102ae57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610e69565b6040518082815260200191505060405180910390f35b6103206004803603602081101561030757600080fd5b81019080803560ff169060200190929190505050610f54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103a56004803603606081101561037857600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610fbb565b6040518082815260200191505060405180910390f35b6103c36110ee565b005b6103cd611199565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104176111c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61049b6004803603602081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f3565b604051808381526020018260028111156104b157fe5b60ff1681526020019250505060405180910390f35b6104ce611292565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d36004803603604081101561052657600080fd5b81019080803590602001909291908035906020019064010000000081111561054d57600080fd5b82018360208201111561055f57600080fd5b8035906020019184600183028401116401000000008311171561058157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112bc565b6040518082815260200191505060405180910390f35b610615600480360360208110156105ff57600080fd5b8101908080359060200190929190505050611382565b005b6106466004803603602081101561062d57600080fd5b81019080803560ff169060200190929190505050611450565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106906114b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61080f600480360360e08110156106e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561078957600080fd5b82018360208201111561079b57600080fd5b803590602001918460018302840111640100000000831117156107bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114e1565b005b6108ca6004803603602081101561082757600080fd5b810190808035906020019064010000000081111561084457600080fd5b82018360208201111561085657600080fd5b8035906020019184600183028401116401000000008311171561087857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611800565b005b6108f8600480360360208110156108e257600080fd5b8101908080359060200190929190505050611887565b005b610902611984565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d60208110156109e357600080fd5b8101908080519060200190929190505050905090565b6000610a04336119e7565b90506000610a128233611a40565b905060006004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600460030160009054906101000a900460ff16610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613b166032913960400191505060405180910390fd5b600060046002015411610b3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6e6f207374616b6520746f6b656e73206c65667420746f2072656465656d000081525060200191505060405180910390fd5b60008411610bb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6d7573742072656465656d20706f73697469766520616d6f756e74000000000081525060200191505060405180910390fd5b80841115610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613ac66026913960400191505060405180910390fd5b6000826004600201548681610c1d57fe5b04029050610c2d84333384611aa5565b50610c82856004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aca90919063ffffffff16565b6004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cdf85600460020154611aca90919063ffffffff16565b6004600201819055505050505050565b600080610cfa611984565b90506000811115610d0f576001915050610d15565b60009150505b90565b600080610d49600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119e7565b915081610d5583610f54565b915091509091565b610d6633611b14565b610dd8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610de181611b6e565b50565b610ded33611b14565b610e5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610e67611d7d565b565b6000600280811115610e7757fe5b826002811115610e8357fe5b1415610eb4576012600a0a610ea5610e9f856012600a0a611eea565b86611f70565b81610eac57fe5b049050610f4d565b60016002811115610ec157fe5b826002811115610ecd57fe5b1415610edc5760009050610f4d565b60006002811115610ee957fe5b826002811115610ef557fe5b1415610f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613b486021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610f6257fe5b826002811115610f6e57fe5b1415610f8357610f7c611fa8565b9050610fb6565b60016002811115610f9057fe5b826002811115610f9c57fe5b1415610fb157610faa611fc4565b9050610fb6565b600090505b919050565b6000600280811115610fc957fe5b826002811115610fd557fe5b1415611006576012600a0a610ff7610ff1856012600a0a611eea565b86611fe0565b81610ffe57fe5b0490506110e7565b6001600281111561101357fe5b82600281111561101f57fe5b1415611076576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a846021913960400191505060405180910390fd5b6000600281111561108357fe5b82600281111561108f57fe5b14156110e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613b486021913960400191505060405180910390fd5b5b9392505050565b6110f733612014565b80611107575061110633611b14565b5b611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6001600460030160006101000a81548160ff021916908315150217905550565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006112c733612014565b806112d757506112d633611b14565b5b611349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61137a33600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612053565b905092915050565b61138b33612014565b8061139b575061139a33611b14565b5b61140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061144b611443826119e7565b823385612316565b505050565b600060028081111561145e57fe5b82600281111561146a57fe5b141561147f5761147861233c565b90506114b2565b6001600281111561148c57fe5b82600281111561149857fe5b14156114ad576114a6612358565b90506114b2565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614611587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613aec602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460030160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461166b5761166a88612374565b5b61167787868686612582565b600082511461168a5761168982612841565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561175857fe5b60ff16815260200184815260200183600281111561177257fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117b657808201518184015260208101905061179b565b50505050905090810190601f1680156117e35780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b61180933611b14565b61187b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61188481612841565b50565b6000611892336119e7565b90506118a081333385612316565b5060006118ad8233611a40565b905060006004600201548285816118c057fe5b04029050611918816004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128e090919063ffffffff16565b6004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611975816004600201546128e090919063ffffffff16565b60046002018190555050505050565b60006119e26119b7600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119e7565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a40565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000806000846002811115611a5157fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000611ab2858584612968565b9050611abf858484612b46565b809050949350505050565b6000611b0c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d04565b905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600080831415611efd5760009050611f6a565b6000828402905082848281611f0e57fe5b0414611f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613aa56021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611f98611f848585611eea565b60026012600a0a81611f9257fe5b046128e0565b81611f9f57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081612004611ff4856012600a0a611eea565b60028581611ffe57fe5b046128e0565b8161200b57fe5b04905092915050565b600061201e611199565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff1690506000600281111561215057fe5b82600281111561215c57fe5b14156121d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6121db838784610e69565b93506121e8818986612dc4565b6121f3818888612e9e565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156122ca5780820151818401526020810190506122af565b50505050905090810190601f1680156122f75780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612323858584612f44565b9050612331858430856130a7565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561258f57fe5b81600281111561259b57fe5b14806125bd5750600160028111156125af57fe5b8160028111156125bb57fe5b145b1561261c576000821461261b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613b69602c913960400191505060405180910390fd5b5b6126258361329a565b612697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156126f557fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600281111561279f57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561280b57fe5b60ff16815260200183815260200182600281111561282557fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156128a3578082015181840152602081019050612888565b50505050905090810190601f1680156128d05780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60008082840190508381101561295e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008086600281111561297a57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612a3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612a518382611aca90919063ffffffff16565b915081600080876002811115612a6357fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ae757fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b82612b508161329a565b612bc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612bcb84610f54565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b505050506040513d6020811015612c7b57600080fd5b8101908080519060200190929190505050612cfe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b6000838311158290612db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d76578082015181840152602081019050612d5b565b50505050905090810190601f168015612da35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b82612dce8161329a565b612e40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115612e4c57fe5b846002811115612e5857fe5b1415612e6d57612e6883836132dd565b612e98565b60016002811115612e7a57fe5b846002811115612e8657fe5b1415612e9757612e9683836133f5565b5b5b50505050565b600080612eac858585612968565b9050612eb88584613541565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b85858560405180846002811115612eec57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612fb382600080876002811115612f5957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128e090919063ffffffff16565b905080600080866002811115612fc557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561304957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b836130b18161329a565b613123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61312c85610f54565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156131e657600080fd5b505af11580156131fa573d6000803e3d6000fd5b505050506040513d602081101561321057600080fd5b8101908080519060200190929190505050613293576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000600160028111156132a957fe5b8260028111156132b557fe5b14806132d657506002808111156132c857fe5b8260028111156132d457fe5b145b9050919050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156133ac57600080fd5b505af11580156133c0573d6000803e3d6000fd5b505050506040513d60208110156133d657600080fd5b8101908080519060200190929190505050506133f181613618565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561349057600080fd5b505af11580156134a4573d6000803e3d6000fd5b505050506040513d60208110156134ba57600080fd5b810190808051906020019092919050505061353d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161354b8161329a565b6135bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156135c957fe5b8360028111156135d557fe5b14156135e9576135e482613618565b613613565b600160028111156135f657fe5b83600281111561360257fe5b14156136125761361182613827565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156136c757600080fd5b505af11580156136db573d6000803e3d6000fd5b505050506040513d60208110156136f157600080fd5b81019080805190602001909291905050505060008190506000806137148361393e565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a78686868661375b611fc4565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156137d957600080fd5b505af11580156137ed573d6000803e3d6000fd5b505050506040513d602081101561380357600080fd5b8101908080519060200190929190505050905061381f81613827565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561388e57600080fd5b505af11580156138a2573d6000803e3d6000fd5b505050506040513d60208110156138b857600080fd5b810190808051906020019092919050505061393b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156139a657600080fd5b505afa1580156139ba573d6000803e3d6000fd5b505050506040513d60208110156139d057600080fd5b810190808051906020019092919050505090506139eb612358565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613a3b57600080fd5b505afa158015613a4f573d6000803e3d6000fd5b505050506040513d6020811015613a6557600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7763616e6e6f742072656465656d206d6f7265207374616b65207468616e20796f7520686176656d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f727374616b65206d7573742062652072656c656173656420627920636f756e7465727061727479206f72206f70657261746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820808e7c87ad453391b1c390327aab1cf807a2ca273101a1d71f4a9aac1c1741fe64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806372b45a55116100b8578063c529ebfd1161007c578063c529ebfd14610617578063e7f43c6814610688578063ed251a42146106d2578063ee57e36f14610811578063eedad66b146108cc578063fc0e3d90146108fa57610142565b806372b45a551461040f578063754b27071461045957806388cc58e4146104c657806390bfe0bf14610510578063a9fb763c146105e957610142565b80632ab6f8db1161010a5780632ab6f8db1461028e578063465b414e146102985780635ad3f918146102f15780635baeb806146103625780635c48c1fa146103bb578063728fa494146103c557610142565b80630ee2cb101461014757806310ff994d146101915780631723537d146101bf57806321df0da7146101eb57806329605e771461024a575b600080fd5b61014f610918565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bd600480360360208110156101a757600080fd5b81019080803590602001909291905050506109f9565b005b6101c7610cef565b604051808260018111156101d757fe5b60ff16815260200191505060405180910390f35b6101f3610d18565b6040518083600281111561020357fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61028c6004803603602081101561026057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5d565b005b610296610de4565b005b6102db600480360360608110156102ae57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610e69565b6040518082815260200191505060405180910390f35b6103206004803603602081101561030757600080fd5b81019080803560ff169060200190929190505050610f54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103a56004803603606081101561037857600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610fbb565b6040518082815260200191505060405180910390f35b6103c36110ee565b005b6103cd611199565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104176111c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61049b6004803603602081101561046f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f3565b604051808381526020018260028111156104b157fe5b60ff1681526020019250505060405180910390f35b6104ce611292565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d36004803603604081101561052657600080fd5b81019080803590602001909291908035906020019064010000000081111561054d57600080fd5b82018360208201111561055f57600080fd5b8035906020019184600183028401116401000000008311171561058157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112bc565b6040518082815260200191505060405180910390f35b610615600480360360208110156105ff57600080fd5b8101908080359060200190929190505050611382565b005b6106466004803603602081101561062d57600080fd5b81019080803560ff169060200190929190505050611450565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106906114b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61080f600480360360e08110156106e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561078957600080fd5b82018360208201111561079b57600080fd5b803590602001918460018302840111640100000000831117156107bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114e1565b005b6108ca6004803603602081101561082757600080fd5b810190808035906020019064010000000081111561084457600080fd5b82018360208201111561085657600080fd5b8035906020019184600183028401116401000000008311171561087857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611800565b005b6108f8600480360360208110156108e257600080fd5b8101908080359060200190929190505050611887565b005b610902611984565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d60208110156109e357600080fd5b8101908080519060200190929190505050905090565b6000610a04336119e7565b90506000610a128233611a40565b905060006004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600460030160009054906101000a900460ff16610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180613b166032913960400191505060405180910390fd5b600060046002015411610b3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6e6f207374616b6520746f6b656e73206c65667420746f2072656465656d000081525060200191505060405180910390fd5b60008411610bb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6d7573742072656465656d20706f73697469766520616d6f756e74000000000081525060200191505060405180910390fd5b80841115610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613ac66026913960400191505060405180910390fd5b6000826004600201548681610c1d57fe5b04029050610c2d84333384611aa5565b50610c82856004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aca90919063ffffffff16565b6004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cdf85600460020154611aca90919063ffffffff16565b6004600201819055505050505050565b600080610cfa611984565b90506000811115610d0f576001915050610d15565b60009150505b90565b600080610d49600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119e7565b915081610d5583610f54565b915091509091565b610d6633611b14565b610dd8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610de181611b6e565b50565b610ded33611b14565b610e5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610e67611d7d565b565b6000600280811115610e7757fe5b826002811115610e8357fe5b1415610eb4576012600a0a610ea5610e9f856012600a0a611eea565b86611f70565b81610eac57fe5b049050610f4d565b60016002811115610ec157fe5b826002811115610ecd57fe5b1415610edc5760009050610f4d565b60006002811115610ee957fe5b826002811115610ef557fe5b1415610f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613b486021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610f6257fe5b826002811115610f6e57fe5b1415610f8357610f7c611fa8565b9050610fb6565b60016002811115610f9057fe5b826002811115610f9c57fe5b1415610fb157610faa611fc4565b9050610fb6565b600090505b919050565b6000600280811115610fc957fe5b826002811115610fd557fe5b1415611006576012600a0a610ff7610ff1856012600a0a611eea565b86611fe0565b81610ffe57fe5b0490506110e7565b6001600281111561101357fe5b82600281111561101f57fe5b1415611076576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a846021913960400191505060405180910390fd5b6000600281111561108357fe5b82600281111561108f57fe5b14156110e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613b486021913960400191505060405180910390fd5b5b9392505050565b6110f733612014565b80611107575061110633611b14565b5b611179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6001600460030160006101000a81548160ff021916908315150217905550565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006112c733612014565b806112d757506112d633611b14565b5b611349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61137a33600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612053565b905092915050565b61138b33612014565b8061139b575061139a33611b14565b5b61140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061144b611443826119e7565b823385612316565b505050565b600060028081111561145e57fe5b82600281111561146a57fe5b141561147f5761147861233c565b90506114b2565b6001600281111561148c57fe5b82600281111561149857fe5b14156114ad576114a6612358565b90506114b2565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614611587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613aec602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460030160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461166b5761166a88612374565b5b61167787868686612582565b600082511461168a5761168982612841565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561175857fe5b60ff16815260200184815260200183600281111561177257fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117b657808201518184015260208101905061179b565b50505050905090810190601f1680156117e35780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b61180933611b14565b61187b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61188481612841565b50565b6000611892336119e7565b90506118a081333385612316565b5060006118ad8233611a40565b905060006004600201548285816118c057fe5b04029050611918816004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128e090919063ffffffff16565b6004800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611975816004600201546128e090919063ffffffff16565b60046002018190555050505050565b60006119e26119b7600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119e7565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a40565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000806000846002811115611a5157fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000611ab2858584612968565b9050611abf858484612b46565b809050949350505050565b6000611b0c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d04565b905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600080831415611efd5760009050611f6a565b6000828402905082848281611f0e57fe5b0414611f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613aa56021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611f98611f848585611eea565b60026012600a0a81611f9257fe5b046128e0565b81611f9f57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081612004611ff4856012600a0a611eea565b60028581611ffe57fe5b046128e0565b8161200b57fe5b04905092915050565b600061201e611199565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff1690506000600281111561215057fe5b82600281111561215c57fe5b14156121d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b6121db838784610e69565b93506121e8818986612dc4565b6121f3818888612e9e565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156122ca5780820151818401526020810190506122af565b50505050905090810190601f1680156122f75780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612323858584612f44565b9050612331858430856130a7565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561258f57fe5b81600281111561259b57fe5b14806125bd5750600160028111156125af57fe5b8160028111156125bb57fe5b145b1561261c576000821461261b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613b69602c913960400191505060405180910390fd5b5b6126258361329a565b612697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156126f557fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600281111561279f57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561280b57fe5b60ff16815260200183815260200182600281111561282557fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156128a3578082015181840152602081019050612888565b50505050905090810190601f1680156128d05780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60008082840190508381101561295e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008086600281111561297a57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612a3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612a518382611aca90919063ffffffff16565b915081600080876002811115612a6357fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ae757fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b82612b508161329a565b612bc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612bcb84610f54565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b505050506040513d6020811015612c7b57600080fd5b8101908080519060200190929190505050612cfe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b6000838311158290612db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d76578082015181840152602081019050612d5b565b50505050905090810190601f168015612da35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b82612dce8161329a565b612e40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115612e4c57fe5b846002811115612e5857fe5b1415612e6d57612e6883836132dd565b612e98565b60016002811115612e7a57fe5b846002811115612e8657fe5b1415612e9757612e9683836133f5565b5b5b50505050565b600080612eac858585612968565b9050612eb88584613541565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b85858560405180846002811115612eec57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612fb382600080876002811115612f5957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128e090919063ffffffff16565b905080600080866002811115612fc557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561304957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b836130b18161329a565b613123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61312c85610f54565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156131e657600080fd5b505af11580156131fa573d6000803e3d6000fd5b505050506040513d602081101561321057600080fd5b8101908080519060200190929190505050613293576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000600160028111156132a957fe5b8260028111156132b557fe5b14806132d657506002808111156132c857fe5b8260028111156132d457fe5b145b9050919050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156133ac57600080fd5b505af11580156133c0573d6000803e3d6000fd5b505050506040513d60208110156133d657600080fd5b8101908080519060200190929190505050506133f181613618565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561349057600080fd5b505af11580156134a4573d6000803e3d6000fd5b505050506040513d60208110156134ba57600080fd5b810190808051906020019092919050505061353d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161354b8161329a565b6135bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156135c957fe5b8360028111156135d557fe5b14156135e9576135e482613618565b613613565b600160028111156135f657fe5b83600281111561360257fe5b14156136125761361182613827565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156136c757600080fd5b505af11580156136db573d6000803e3d6000fd5b505050506040513d60208110156136f157600080fd5b81019080805190602001909291905050505060008190506000806137148361393e565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a78686868661375b611fc4565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156137d957600080fd5b505af11580156137ed573d6000803e3d6000fd5b505050506040513d602081101561380357600080fd5b8101908080519060200190929190505050905061381f81613827565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561388e57600080fd5b505af11580156138a2573d6000803e3d6000fd5b505050506040513d60208110156138b857600080fd5b810190808051906020019092919050505061393b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156139a657600080fd5b505afa1580156139ba573d6000803e3d6000fd5b505050506040513d60208110156139d057600080fd5b810190808051906020019092919050505090506139eb612358565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613a3b57600080fd5b505afa158015613a4f573d6000803e3d6000fd5b505050506040513d6020811015613a6557600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7763616e6e6f742072656465656d206d6f7265207374616b65207468616e20796f7520686176656d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f727374616b65206d7573742062652072656c656173656420627920636f756e7465727061727479206f72206f70657261746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820808e7c87ad453391b1c390327aab1cf807a2ca273101a1d71f4a9aac1c1741fe64736f6c63430005100032",
  "sourceMap": "1549:11556:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:11556:3;;;;;;;",
  "deployedSourceMap": "1549:11556:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:11556:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:229:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6065:1076:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6065:1076:3;;;;;;;;;;;;;;;;;:::i;:::-;;12259:279;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11480:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9650:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9650:228:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;10017:204;;;:::i;:::-;;5448:393:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5448:393:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:280:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:280:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6477:428:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6477:428:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9231:212:3;;;:::i;:::-;;10866:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10350:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4337:212:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:212:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:92:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8714:343:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8714:343:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8714:343:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8714:343:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8714:343:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8714:343:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7522:380;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7522:380:3;;;;;;;;;;;;;;;;;:::i;:::-;;1047:292:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1047:292:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1454:95:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3444:874:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3444:874:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3444:874:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3444:874:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3444:874:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3444:874:3;;;;;;;;;;;;;;;:::i;:::-;;4522:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4522:226:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4522:226:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4522:226:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4522:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4522:226:3;;;;;;;;;;;;;;;:::i;:::-;;5116:573;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5116:573:3;;;;;;;;;;;;;;;;;:::i;:::-;;11820:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1134:229:26;1177:15;1313:8;;;;;;;;;;;1304:37;;;1350:4;1304:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:52:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1304:52:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1304:52:26;;;;;;;;;;;;;;;;1297:59;;1134:229;:::o;6065:1076:3:-;6165:27;6195:31;6215:10;6195:19;:31::i;:::-;6165:61;;6236:17;6256:39;6275:7;6284:10;6256:18;:39::i;:::-;6236:59;;6305:18;6326:5;:18;;:30;6345:10;6326:30;;;;;;;;;;;;;;;;6305:51;;6436:5;:16;;;;;;;;;;;;6428:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6550:1;6525:5;:22;;;:26;6517:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6621:1;6604:14;:18;6596:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6690:10;6672:14;:28;;6664:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6778:21;6847:9;6820:5;:22;;;6803:14;:39;;;;;;6802:54;6778:78;;6866:66;6885:7;6894:10;6906;6918:13;6866:18;:66::i;:::-;;7007:50;7042:14;7007:5;:18;;:30;7026:10;7007:30;;;;;;;;;;;;;;;;:34;;:50;;;;:::i;:::-;6974:5;:18;;:30;6993:10;6974:30;;;;;;;;;;;;;;;:83;;;;7092:42;7119:14;7092:5;:22;;;:26;;:42;;;;:::i;:::-;7067:5;:22;;:67;;;;6065:1076;;;;;:::o;12259:279::-;12310:22;12344:20;12367:10;:8;:10::i;:::-;12344:33;;12406:1;12391:12;:16;12387:145;;;12430:24;12423:31;;;;;12387:145;12492:29;12485:36;;;12259:279;;:::o;11480:210::-;11521:27;11550:13;11585:33;11605:5;:12;;;;;;;;;;;;11585:19;:33::i;:::-;11575:43;;11636:7;11645:37;11674:7;11645:28;:37::i;:::-;11628:55;;;;11480:210;;:::o;9650:228::-;9746:31;9766:10;9746:19;:31::i;:::-;9738:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9835:36;9862:8;9835:26;:36::i;:::-;9650:228;:::o;10017:204::-;10097:31;10117:10;10097:19;:31::i;:::-;10089:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10186:28;:26;:28::i;:::-;10017:204::o;5448:393:18:-;5541:12;5582:13;5569:26;;;;;;;;:9;:26;;;;;;;;;5565:110;;;955:2;940;932:26;5616:53;5632:29;5645:10;955:2;940;932:26;5632:12;:29::i;:::-;5663:5;5616:15;:53::i;:::-;:59;;;;;;5609:66;;;;5565:110;5702:13;5689:26;;;;;;;;:9;:26;;;;;;;;;5685:52;;;5736:1;5729:8;;;;5685:52;5764:13;5751:26;;;;;;;;:9;:26;;;;;;;;;5747:87;;;5791:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:87;5448:393;;;;;;:::o;554:280:27:-;616:20;663:10;652:21;;;;;;;;:7;:21;;;;;;;;;648:71;;;694:25;:23;:25::i;:::-;687:32;;;;648:71;744:10;733:21;;;;;;;;:7;:21;;;;;;;;;729:71;;;775:25;:23;:25::i;:::-;768:32;;;;729:71;825:1;810:17;;554:280;;;;:::o;6477:428:18:-;6570:18;6617:13;6604:26;;;;;;;;:9;:26;;;;;;;;;6600:104;;;955:2;940;932:26;6651:47;6667:23;6680:4;955:2;940;932:26;6667:12;:23::i;:::-;6692:5;6651:15;:47::i;:::-;:53;;;;;;6644:60;;;;6600:104;6731:13;6718:26;;;;;;;;:9;:26;;;;;;;;;6714:87;;;6758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6714:87;6828:13;6815:26;;;;;;;;:9;:26;;;;;;;;;6811:87;;;6855:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:87;6477:428;;;;;;:::o;9231:212:3:-;9307:26;9322:10;9307:14;:26::i;:::-;:61;;;;9337:31;9357:10;9337:19;:31::i;:::-;9307:61;9299:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9432:4;9413:5;:16;;;:23;;;;;;;;;;;;;;;;;;9231:212::o;10866:112::-;10914:20;10953:5;:18;;;;;;;;;;;;10946:25;;10866:112;:::o;10350:94::-;10392:14;10425:5;:12;;;;;;;;;;;;10418:19;;10350:94;:::o;4337:212:18:-;4392:13;4407:19;4485:11;:19;4497:6;4485:19;;;;;;;;;;;;;;;:25;;;4512:11;:19;4524:6;4512:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4477:65;;;;4337:212;;;:::o;1770:92:26:-;1813:15;1847:8;;;;;;;;;;;1840:15;;1770:92;:::o;8714:343:3:-;8788:12;8847:26;8862:10;8847:14;:26::i;:::-;:61;;;;8877:31;8897:10;8877:19;:31::i;:::-;8847:61;8839:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8988:62;9004:10;9016:5;:12;;;;;;;;;;;;9030:10;9042:7;8988:15;:62::i;:::-;8981:69;;8714:343;;;;:::o;7522:380::-;7611:26;7626:10;7611:14;:26::i;:::-;:61;;;;7641:31;7661:10;7641:19;:31::i;:::-;7611:61;7603:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7755:14;7772:5;:12;;;;;;;;;;;;7755:29;;7816:79;7834:27;7854:6;7834:19;:27::i;:::-;7863:6;7871:10;7883:11;7816:17;:79::i;:::-;;7522:380;;:::o;1047:292:27:-;1112:23;1162:10;1151:21;;;;;;;;:7;:21;;;;;;;;;1147:74;;;1193:28;:26;:28::i;:::-;1186:35;;;;1147:74;1246:10;1235:21;;;;;;;;:7;:21;;;;;;;;;1231:74;;;1277:28;:26;:28::i;:::-;1270:35;;;;1231:74;1330:1;1315:17;;1047:292;;;;:::o;1454:95:20:-;1498:16;1533:9;;;;;;;;;;;1526:16;;1454:95;:::o;3444:874:3:-;600:10:26;589:8;;:21;;;;;;;;;;;;;;;;;;702:15;762:7;750:20;738:32;;801:1;789:8;:13;;;781:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3762:6:3;3747:5;:12;;;:21;;;;;;;;;;;;;;;;;;3799:12;3778:5;:18;;;:33;;;;;;;;;;;;;;;;;;3840:5;3821;:16;;;:24;;;;;;;;;;;;;;;;;;3904:1;3884:22;;:8;:22;;;3880:84;;3922:31;3944:8;3922:21;:31::i;:::-;3880:84;4004:53;4023:6;4031:7;4040:5;4047:9;4004:18;:53::i;:::-;4115:1;4096:8;:15;:20;4092:87;;4132:36;4159:8;4132:26;:36::i;:::-;4092:87;4231:80;4243:8;4253:6;4261:12;4275:7;4284:5;4291:9;4302:8;4231:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4231:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3444:874;;;;;;;;:::o;4522:226::-;4618:31;4638:10;4618:19;:31::i;:::-;4610:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4705:36;4732:8;4705:26;:36::i;:::-;4522:226;:::o;5116:573::-;5177:27;5207:31;5227:10;5207:19;:31::i;:::-;5177:61;;5270:63;5288:7;5297:10;5309;5321:11;5270:17;:63::i;:::-;;5377:17;5397:39;5416:7;5425:10;5397:18;:39::i;:::-;5377:59;;5446:19;5496:5;:22;;;5483:9;5469:11;:23;;;;;;5468:50;5446:72;;5561:47;5596:11;5561:5;:18;;:30;5580:10;5561:30;;;;;;;;;;;;;;;;:34;;:47;;;;:::i;:::-;5528:5;:18;;:30;5547:10;5528:30;;;;;;;;;;;;;;;:80;;;;5643:39;5670:11;5643:5;:22;;;:26;;:39;;;;:::i;:::-;5618:5;:22;;:64;;;;5116:573;;;;:::o;11820:147::-;11861:13;11893:67;11912:33;11932:5;:12;;;;;;;;;;;;11912:19;:33::i;:::-;11947:5;:12;;;;;;;;;;;;11893:18;:67::i;:::-;11886:74;;11820:147;:::o;4715:180:18:-;4774:27;4860:11;:19;4872:6;4860:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4852:36;;4715:180;;;:::o;3707:159:15:-;3793:15;3827:8;:26;3844:7;3836:16;;;;;;;;3827:26;;;;;;;;;;;:32;3854:4;3827:32;;;;;;;;;;;;;;;;3820:39;;3707:159;;;;:::o;2152:408:25:-;2276:16;2341:55;2366:7;2375:6;2383:12;2341:24;:55::i;:::-;2330:66;;2444:56;2467:7;2476:9;2487:12;2444:22;:56::i;:::-;2545:8;2538:15;;2152:408;;;;;;:::o;1274:134:54:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1555:111:20:-;1614:7;1650:9;;;;;;;;;;;1640:19;;:6;:19;;;1633:26;;1555:111;;;:::o;724:410::-;856:1;835:23;;:9;;;;;;;;;;;:23;;;;827:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:1;939:22;;:8;:22;;;;931:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:8;1044:9;;:20;;;;;;;;;;;;;;;;;;1102:25;1118:8;1102:25;;;;;;;;;;;;;;;;;;;;;;724:410;:::o;1140:285::-;1256:1;1235:23;;:9;;;;;;;;;;;:23;;;;1227:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:1;1331:9;;:22;;;;;;;;;;;;;;;;;;1391:27;1415:1;1391:27;;;;;;;;;;;;;;;;;;;;;;1140:285::o;2159:459:54:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;519:140:8:-;576:9;312:2;297;289:26;601:43;614:18;627:1;630;614:12;:18::i;:::-;642:1;312:2;297;289:26;634:9;;;;;;601:12;:43::i;:::-;:51;;;;;;597:55;;519:140;;;;:::o;2879:99:11:-;2929:13;525:42;2954:17;;2879:99;:::o;1500::12:-;1550:13;564:42;1575:17;;1500:99;:::o;853:136:8:-;910:9;981:1;935:43;948:22;961:1;312:2;297;289:26;948:12;:22::i;:::-;976:1;972;:5;;;;;;935:12;:43::i;:::-;:47;;;;;;931:51;;853:136;;;;:::o;11161:129:3:-;11224:13;11266:17;:15;:17::i;:::-;11256:27;;:6;:27;;;11249:34;;11161:129;;;:::o;2917:969:18:-;3065:12;3128:13;3144:11;:19;3156:6;3144:19;;;;;;;;;;;;;;;:25;;;3128:41;;3179:19;3201:11;:19;3213:6;3201:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3179:51;;3240:27;3270:11;:19;3282:6;3270:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3240:57;;3329:13;3316:26;;;;;;;;:9;:26;;;;;;;;;;3308:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:37;3496:5;3503:10;3515:9;3488:7;:37::i;:::-;3481:44;;3589:47;3612:7;3621:8;3631:4;3589:22;:47::i;:::-;3702;3721:7;3730:6;3738:10;3702:18;:47::i;:::-;;3787:52;3795:8;3805:6;3813:10;3825:4;3831:7;3787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3787:52:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:4;3868:11;;;;;2917:969;;;;;;:::o;1209:417:25:-;1328:16;1393:54;1418:7;1427:6;1435:11;1393:24;:54::i;:::-;1382:65;;1495:71;1522:7;1531:6;1547:4;1554:11;1495:26;:71::i;:::-;1611:8;1604:15;;1209:417;;;;;;:::o;3102:111:11:-;3155:16;659:42;3183:23;;3102:111;:::o;1723::12:-;1776:16;698:42;1804:23;;1723:111;:::o;301:417:20:-;442:1;421:23;;:9;;;;;;;;;;;:23;;;413:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:1;523:22;;:8;:22;;;;515:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:8;628:9;;:20;;;;;;;;;;;;;;;;;;686:25;702:8;686:25;;;;;;;;;;;;;;;;;;;;;;301:417;:::o;1711:640:18:-;1847:13;1834:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1877:13;1864:26;;;;;;;;:9;:26;;;;;;;;;1834:56;1830:154;;;1923:1;1914:5;:10;1906:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:154;2034:36;2062:7;2034:27;:36::i;:::-;2026:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:7;2100:11;:19;2112:6;2100:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2207:5;2179:11;:19;2191:6;2179:19;;;;;;;;;;;;;;;:25;;:33;;;;2254:9;2222:11;:19;2234:6;2222:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2301:43;2310:6;2318:7;2327:5;2334:9;2301:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:640;;;;:::o;417:97:16:-;486:21;498:8;486:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;486:21:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:97;:::o;834:176:54:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2070:694:15:-;2181:18;2242:22;2267:8;:26;2284:7;2276:16;;;;;;;;2267:26;;;;;;;;;;;:32;2294:4;2267:32;;;;;;;;;;;;;;;;2242:57;;2375:14;2357;:32;;2349:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:34;2507:14;2488;:18;;:34;;;;:::i;:::-;2475:47;;2604:10;2569:8;:26;2586:7;2578:16;;;;;;;;2569:26;;;;;;;;;;;:32;2596:4;2569:32;;;;;;;;;;;;;;;:45;;;;2652:59;2669:7;2678:4;2684:14;2700:10;2652:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:10;2740:17;;;2070:694;;;;;:::o;2002:200:27:-;2090:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:24;2140:7;2124:15;:24::i;:::-;2117:41;;;2159:2;2163:5;2117:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:52:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2117:52:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:52:27;;;;;;;;;;;;;;;;2109:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:200;;;;:::o;1732:187:54:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;3256:285:27:-;3346:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:10;3369:21;;;;;;;;:7;:21;;;;;;;;;3365:170;;;3406:30;3424:4;3430:5;3406:17;:30::i;:::-;3365:170;;;3468:10;3457:21;;;;;;;;:7;:21;;;;;;;;;3453:82;;;3494:30;3512:4;3518:5;3494:17;:30::i;:::-;3453:82;3365:170;3256:285;;;;:::o;3778:453:25:-;3883:16;3937:18;3958:55;3983:7;3992:6;4000:12;3958:24;:55::i;:::-;3937:76;;4057:41;4076:7;4085:12;4057:18;:41::i;:::-;4136:42;4148:7;4157:6;4165:12;4136:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:10;4207:17;;;3778:453;;;;;:::o;1227:479:15:-;1335:18;1418:49;1455:11;1418:8;:26;1435:7;1427:16;;;;;;;;1418:26;;;;;;;;;;;:32;1445:4;1418:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1405:62;;1549:10;1514:8;:26;1531:7;1523:16;;;;;;;;1514:26;;;;;;;;;;;:32;1541:4;1514:32;;;;;;;;;;;;;;;:45;;;;1597:56;1614:7;1623:4;1629:11;1642:10;1597:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:10;1682:17;;1227:479;;;;;:::o;2443:228:27:-;2549:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:24;2599:7;2583:15;:24::i;:::-;2576:45;;;2622:4;2628:2;2632:5;2576:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2576:62:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2576:62:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2576:62:27;;;;;;;;;;;;;;;;2568:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:228;;;;;:::o;1660:148::-;1723:13;1766:10;1755:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1791:10;1780:21;;;;;;;;:7;:21;;;;;;;;;1755:46;1748:53;;1660:148;;;:::o;1015:217:11:-;525:42;1124:30;;;1155:4;1169;1176:5;1124:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:58:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1124:58:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1124:58:11;;;;;;;;;;;;;;;;;1213:12;1219:5;1213;:12::i;:::-;1015:217;;:::o;1248:150:12:-;564:42;1323:31;;;1355:4;1361:5;1323:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:44:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1323:44:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1323:44:12;;;;;;;;;;;;;;;;1315:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:150;;:::o;2817:247:27:-;2889:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:10;2912:21;;;;;;;;:7;:21;;;;;;;;;2908:150;;;2949:20;2963:5;2949:13;:20::i;:::-;2908:150;;;3001:10;2990:21;;;;;;;;:7;:21;;;;;;;;;2986:72;;;3027:20;3041:5;3027:13;:20::i;:::-;2986:72;2908:150;2817:247;;;:::o;1445:653:11:-;525:42;1541:25;;;659:42;1581:5;1541:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:46:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:46:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:46:11;;;;;;;;;;;;;;;;;1626:19;1648:5;1626:27;;1664:25;1691:22;1717:34;1739:11;1717:21;:34::i;:::-;1663:88;;;;1761:16;1780:3;1761:22;;1793:21;659:42;1817:60;;;1891:11;1916:17;1947:14;1975:8;1997:25;:23;:25::i;:::-;1817:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1817:215:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1817:215:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1817:215:11;;;;;;;;;;;;;;;;1793:239;;2063:28;2077:13;2063;:28::i;:::-;1445:653;;;;;;:::o;890:111:12:-;564:42;947:20;;;968:5;947:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:27:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;947:27:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:27:12;;;;;;;;;;;;;;;;939:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:111;:::o;2414:363:11:-;2487:17;2506;659:42;2547:62;;;2610:9;2547:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2547:73:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2547:73:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2547:73:11;;;;;;;;;;;;;;;;2535:85;;2667:28;:26;:28::i;:::-;2642:78;;;2721:9;2642:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2642:89:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2642:89:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2642:89:11;;;;;;;;;;;;;;;;2630:101;;2749:9;2760;2741:29;;;;2414:363;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title SimpleGriefingWithFees\n/// @author Noah Harasz (@ndharasz) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/SimpleGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time.\n///             - The counterparty can increase, release, or punish the stake at any time.\n///             - The beneficiaries can increase stake at any time\n///             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\n\ncontract SimpleGriefingWithFees is Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n        uint256 totalStakeTokens;\n        bool isReleased;\n        mapping (address => uint256) stakeholders;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n        _data.isReleased = false;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        TokenManager.Tokens tokenID = Griefing.getTokenID(msg.sender);\n\n        // add stake\n        Staking._addStake(tokenID, msg.sender, msg.sender, amountToAdd);\n\n        // generate stake tokens\n        uint256 currStake = Deposit.getDeposit(tokenID, msg.sender);\n        uint256 tokensToAdd = (amountToAdd / currStake) * _data.totalStakeTokens;\n        _data.stakeholders[msg.sender] = _data.stakeholders[msg.sender].add(tokensToAdd);\n        _data.totalStakeTokens = _data.totalStakeTokens.add(tokensToAdd);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: anytime\n    /// @param tokensToRedeem uint256 amount of stakeTokens (18 decimals) to be redeemed for stake\n    function redeemStake(uint256 tokensToRedeem) public {\n        // declare variable in memory\n        TokenManager.Tokens tokenID = Griefing.getTokenID(msg.sender);\n        uint256 currStake = Deposit.getDeposit(tokenID, msg.sender);\n        uint256 currTokens = _data.stakeholders[msg.sender];\n\n        // make sure they aren't redeeming more than allowed\n        require(_data.isReleased, \"stake must be released by counterparty or operator\");\n        require(_data.totalStakeTokens > 0, \"no stake tokens left to redeem\");\n        require(tokensToRedeem > 0, \"must redeem positive amount\");\n        require(tokensToRedeem <= currTokens, \"cannot redeem more stake than you have\");\n\n        // redeem stake\n        uint256 stakeToRedeem = (tokensToRedeem / _data.totalStakeTokens) *  currStake;\n        Staking._takeStake(tokenID, msg.sender, msg.sender, stakeToRedeem);\n\n        // remove stake tokens\n        _data.stakeholders[msg.sender] = _data.stakeholders[msg.sender].sub(tokensToRedeem);\n        _data.totalStakeTokens = _data.totalStakeTokens.sub(tokensToRedeem);\n    }\n\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // execute griefing\n        cost = Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    function releaseStake() public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        _data.isReleased = true;\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    enum AgreementStatus { isInitialized, isStaked }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isStaked: stake is deposited\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        uint256 currentStake = getStake();\n        if (currentStake > 0) {\n            return AgreementStatus.isStaked;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isStaked state\n    /// @return validity bool true if correct state\n    function isStaked() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isStaked;\n    }\n}\n",
  "sourcePath": "/Users/noah/projects/erasure-protocol/contracts/agreements/SimpleGriefingWithFees.sol",
  "ast": {
    "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/agreements/SimpleGriefingWithFees.sol",
    "exportedSymbols": {
      "SimpleGriefingWithFees": [
        1732
      ]
    },
    "id": 1733,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1130,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1131,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 12149,
        "src": "25:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 1132,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 5005,
        "src": "77:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 1133,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 4328,
        "src": "111:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 1134,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 5233,
        "src": "150:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 1135,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 6514,
        "src": "184:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1136,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5004,
              "src": "1584:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5004",
                "typeString": "contract Griefing"
              }
            },
            "id": 1137,
            "nodeType": "InheritanceSpecifier",
            "src": "1584:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1138,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4327,
              "src": "1594:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4327",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 1139,
            "nodeType": "InheritanceSpecifier",
            "src": "1594:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1140,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5232,
              "src": "1609:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5232",
                "typeString": "contract Operated"
              }
            },
            "id": 1141,
            "nodeType": "InheritanceSpecifier",
            "src": "1609:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6513,
              "src": "1619:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6513",
                "typeString": "contract Template"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "1619:8:3"
          }
        ],
        "contractDependencies": [
          3798,
          3867,
          4310,
          4327,
          5004,
          5232,
          6450,
          6513,
          6876
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleGriefingWithFees\n @author Noah Harasz (@ndharasz) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/SimpleGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time.\n             - The counterparty can increase, release, or punish the stake at any time.\n             - The beneficiaries can increase stake at any time\n             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 1732,
        "linearizedBaseContracts": [
          1732,
          6513,
          5232,
          4327,
          5004,
          6450,
          6876,
          3798,
          3867,
          4310
        ],
        "name": "SimpleGriefingWithFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1146,
            "libraryName": {
              "contractScope": null,
              "id": 1144,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12148,
              "src": "1641:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12148",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1635:27:3",
            "typeName": {
              "id": 1145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1654:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1148,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 1732,
            "src": "1668:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$1161_storage",
              "typeString": "struct SimpleGriefingWithFees.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 1147,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1161,
              "src": "1668:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$1161_storage_ptr",
                "typeString": "struct SimpleGriefingWithFees.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleGriefingWithFees.Data",
            "id": 1161,
            "members": [
              {
                "constant": false,
                "id": 1150,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1714:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1149,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1714:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1152,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1738:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1151,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1738:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1154,
                "name": "totalStakeTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1768:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1153,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1768:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1156,
                "name": "isReleased",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1802:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1155,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1802:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1160,
                "name": "stakeholders",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1827:41:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 1159,
                  "keyType": {
                    "id": 1157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1827:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 1158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 1732,
            "src": "1692:183:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1177,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1163,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1908:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1165,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1934:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1167,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1958:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1169,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1988:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1168,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "1988:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1171,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2025:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2048:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4690",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1172,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4690,
                    "src": "2048:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4690",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1175,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2086:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:208:3"
            },
            "src": "1881:226:3"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "3707:611:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1196,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3747:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1150,
                      "src": "3747:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1199,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "3762:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3747:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1202,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3778:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "3778:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1205,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "3799:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3778:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3821:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isReleased",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "3821:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3840:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3821:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:24:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1214,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "3884:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3904:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3896:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3896:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3884:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1226,
                  "nodeType": "IfStatement",
                  "src": "3880:84:3",
                  "trueBody": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "3908:56:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "3944:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "3922:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5154,
                            "src": "3922:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3922:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "3922:31:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1230,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "4023:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "4031:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "4040:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1233,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "4047:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1227,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "4004:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4798,
                      "src": "4004:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6522_$_t_uint256_$_t_enum$_RatioType_$4690_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "4004:53:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1236,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "4096:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4096:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4115:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4096:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1247,
                  "nodeType": "IfStatement",
                  "src": "4092:87:3",
                  "trueBody": {
                    "id": 1246,
                    "nodeType": "Block",
                    "src": "4118:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1243,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "4159:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1240,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4327,
                              "src": "4132:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4327_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4326,
                            "src": "4132:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4132:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1245,
                        "nodeType": "ExpressionStatement",
                        "src": "4132:36:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1249,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "4243:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "4253:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1251,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "4261:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "4275:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "4284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1254,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "4291:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1255,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "4302:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1248,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "4231:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6522_$_t_uint256_$_t_enum$_RatioType_$4690_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,bytes memory)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "EmitStatement",
                  "src": "4226:85:3"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 1259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1193,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6475,
                  "src": "3686:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3686:20:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3473:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3499:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3523:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3553:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1184,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "3553:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3590:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3613:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4690",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1188,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4690,
                    "src": "3613:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4690",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3651:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3651:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3463:215:3"
            },
            "returnParameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:3"
            },
            "scope": 1732,
            "src": "3444:874:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1279,
              "nodeType": "Block",
              "src": "4573:175:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1267,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "4638:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4638:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1265,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "4618:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "4618:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4618:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "4610:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "4732:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1273,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "4705:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4327_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4326,
                      "src": "4705:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:36:3"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 1280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "4543:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4542:23:3"
            },
            "returnParameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4573:0:3"
            },
            "scope": 1732,
            "src": "4522:226:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "5167:522:3",
              "statements": [
                {
                  "assignments": [
                    1288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1288,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5177:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1287,
                        "name": "TokenManager.Tokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6522,
                        "src": "5177:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1294,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5227:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5227:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1289,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "5207:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4911,
                      "src": "5207:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                        "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5177:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1298,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "5288:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1299,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5297:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5297:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5309:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5309:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1303,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "5321:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "5270:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6325,
                      "src": "5270:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:63:3"
                },
                {
                  "assignments": [
                    1307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "name": "currStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5377:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5377:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1314,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "5416:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5425:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5425:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1308,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "5397:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "5397:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5377:59:3"
                },
                {
                  "assignments": [
                    1316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1316,
                      "name": "tokensToAdd",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5446:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5446:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1324,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1317,
                            "name": "amountToAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "5469:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1318,
                            "name": "currStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1307,
                            "src": "5483:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5469:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5468:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1321,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5496:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "5496:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5468:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5446:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1325,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "5528:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeholders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "5528:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1330,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5528:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1337,
                          "name": "tokensToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5596:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1331,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "5561:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakeholders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "5561:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1335,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1333,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "5580:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5580:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5561:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11988,
                        "src": "5561:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5561:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5528:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1341,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5618:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "5618:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1347,
                          "name": "tokensToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5670:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "5643:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "5643:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11988,
                        "src": "5643:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5643:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5618:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:64:3"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 1352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1282,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "5139:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5138:21:3"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5167:0:3"
            },
            "scope": 1732,
            "src": "5116:573:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "6117:1024:3",
              "statements": [
                {
                  "assignments": [
                    1360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1360,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6165:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1359,
                        "name": "TokenManager.Tokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6522,
                        "src": "6165:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1366,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6215:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6215:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1361,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "6195:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4911,
                      "src": "6195:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                        "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6195:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6165:61:3"
                },
                {
                  "assignments": [
                    1368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1368,
                      "name": "currStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6236:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6236:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1375,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1360,
                        "src": "6275:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6284:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6284:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1369,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "6256:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "6256:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6256:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6236:59:3"
                },
                {
                  "assignments": [
                    1377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1377,
                      "name": "currTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6305:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6305:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1378,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "6326:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeholders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1160,
                      "src": "6326:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1380,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12751,
                        "src": "6345:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6345:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6326:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6305:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1385,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "6436:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isReleased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1156,
                        "src": "6436:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7374616b65206d7573742062652072656c656173656420627920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6454:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b00981be440a38079a2850e5a77e90ce6c8f86ea36a7b4b482af9705c2a6c61e",
                          "typeString": "literal_string \"stake must be released by counterparty or operator\""
                        },
                        "value": "stake must be released by counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b00981be440a38079a2850e5a77e90ce6c8f86ea36a7b4b482af9705c2a6c61e",
                          "typeString": "literal_string \"stake must be released by counterparty or operator\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6428:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "6428:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1391,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "6525:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "6525:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6550:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6525:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f207374616b6520746f6b656e73206c65667420746f2072656465656d",
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6553:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3cf5ed06b20d7bb09b2558385fe27825d80a434ac607c8a3557d23c635c47bd",
                          "typeString": "literal_string \"no stake tokens left to redeem\""
                        },
                        "value": "no stake tokens left to redeem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3cf5ed06b20d7bb09b2558385fe27825d80a434ac607c8a3557d23c635c47bd",
                          "typeString": "literal_string \"no stake tokens left to redeem\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6517:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6517:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "6517:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1399,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "6604:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6621:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6604:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d7573742072656465656d20706f73697469766520616d6f756e74",
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6624:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_309e1b9f8aa9d30797c432b4a60d67bf13fa356da759799ae22874ca82883ca1",
                          "typeString": "literal_string \"must redeem positive amount\""
                        },
                        "value": "must redeem positive amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_309e1b9f8aa9d30797c432b4a60d67bf13fa356da759799ae22874ca82883ca1",
                          "typeString": "literal_string \"must redeem positive amount\""
                        }
                      ],
                      "id": 1398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6596:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1406,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "6672:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1407,
                          "name": "currTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "6690:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6672:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f742072656465656d206d6f7265207374616b65207468616e20796f752068617665",
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6702:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dd2856e5e5d73dea0e768688aa0cbfabc1cab167d041612498166b9863b5447",
                          "typeString": "literal_string \"cannot redeem more stake than you have\""
                        },
                        "value": "cannot redeem more stake than you have"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dd2856e5e5d73dea0e768688aa0cbfabc1cab167d041612498166b9863b5447",
                          "typeString": "literal_string \"cannot redeem more stake than you have\""
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6664:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6664:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "6664:79:3"
                },
                {
                  "assignments": [
                    1413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1413,
                      "name": "stakeToRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6778:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6778:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1414,
                            "name": "tokensToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "6803:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1415,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "6820:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalStakeTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "6820:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6803:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1418,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6802:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1419,
                      "name": "currStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "6847:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6802:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6778:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1425,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1360,
                        "src": "6885:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1426,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6894:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6894:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6906:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6906:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "stakeToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "6918:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1422,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "6866:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6358,
                      "src": "6866:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6866:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1432,
                  "nodeType": "ExpressionStatement",
                  "src": "6866:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1433,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "6974:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeholders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "6974:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1438,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6993:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6993:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6974:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1445,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "7042:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1439,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "7007:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakeholders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "7007:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1441,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "7026:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7026:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7007:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12004,
                        "src": "7007:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7007:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6974:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "7067:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "7067:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "7119:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1452,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "7092:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "7092:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12004,
                        "src": "7092:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7092:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7067:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "7067:67:3"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param tokensToRedeem uint256 amount of stakeTokens (18 decimals) to be redeemed for stake",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "name": "tokensToRedeem",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "6086:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6085:24:3"
            },
            "returnParameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6117:0:3"
            },
            "scope": 1732,
            "src": "6065:1076:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1497,
              "nodeType": "Block",
              "src": "7566:336:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1467,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "7626:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7626:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1466,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "7611:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7611:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1472,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "7661:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7661:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1470,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "7641:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "7641:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7641:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7611:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7674:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "7603:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "7603:103:3"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "7755:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7755:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1481,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "7772:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1150,
                    "src": "7772:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7755:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1489,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "7854:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1487,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "7834:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4911,
                          "src": "7834:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7834:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "7863:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1492,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "7871:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7871:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "7883:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1484,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "7816:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6325,
                      "src": "7816:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7816:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "7816:79:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 1498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "7538:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7537:21:3"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7566:0:3"
            },
            "scope": 1732,
            "src": "7522:380:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1533,
              "nodeType": "Block",
              "src": "8802:255:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1509,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "8862:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8862:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1508,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "8847:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8847:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1514,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "8897:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8897:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1512,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "8877:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "8877:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8877:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8847:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8910:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "8839:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8839:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "8839:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1521,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "8981:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1524,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12751,
                            "src": "9004:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9004:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "9016:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1150,
                          "src": "9016:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1528,
                          "name": "punishment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "9030:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "9042:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1522,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "8988:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_grief",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4877,
                        "src": "8988:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8988:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8981:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:69:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 1534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8730:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8730:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8750:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8750:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8729:42:3"
            },
            "returnParameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8788:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8788:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8787:14:3"
            },
            "scope": 1732,
            "src": "8714:343:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1557,
              "nodeType": "Block",
              "src": "9262:181:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1539,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "9322:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9322:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1538,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "9307:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9307:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1544,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "9357:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9357:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1542,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "9337:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "9337:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9337:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9307:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9370:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "9299:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1551,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "9413:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isReleased",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "9413:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9432:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9413:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "9413:23:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime",
            "id": 1558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9252:2:3"
            },
            "returnParameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9262:0:3"
            },
            "scope": 1732,
            "src": "9231:212:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1578,
              "nodeType": "Block",
              "src": "9701:177:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1566,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "9766:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9766:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1564,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "9746:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "9746:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9746:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9779:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "9738:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "9738:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
                        "src": "9862:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1572,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "9835:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 1574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5186,
                      "src": "9835:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9835:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "9835:36:3"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 1579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1579,
                  "src": "9676:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9675:18:3"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9701:0:3"
            },
            "scope": 1732,
            "src": "9650:228:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "10052:169:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1585,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "10117:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10117:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "10097:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "10097:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10097:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10130:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "10089:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "10186:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5211,
                      "src": "10186:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:28:3"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10042:2:3"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10052:0:3"
            },
            "scope": 1732,
            "src": "10017:204:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1605,
              "nodeType": "Block",
              "src": "10408:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1602,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "10425:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1150,
                    "src": "10425:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1604,
                  "nodeType": "Return",
                  "src": "10418:19:3"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 1606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10368:2:3"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1606,
                  "src": "10392:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10392:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10391:16:3"
            },
            "scope": 1732,
            "src": "10350:94:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "10693:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1613,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1608,
                      "src": "10710:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1614,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "10720:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10720:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10710:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1612,
                  "id": 1617,
                  "nodeType": "Return",
                  "src": "10703:28:3"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "10639:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10639:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10638:16:3"
            },
            "returnParameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "10678:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10678:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10677:15:3"
            },
            "scope": 1732,
            "src": "10621:117:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1627,
              "nodeType": "Block",
              "src": "10936:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1624,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "10953:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1152,
                    "src": "10953:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1623,
                  "id": 1626,
                  "nodeType": "Return",
                  "src": "10946:25:3"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 1628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10890:2:3"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1628,
                  "src": "10914:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10914:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10913:22:3"
            },
            "scope": 1732,
            "src": "10866:112:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "11239:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1635,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1630,
                      "src": "11256:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1636,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "11266:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11266:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11256:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1634,
                  "id": 1639,
                  "nodeType": "Return",
                  "src": "11249:34:3"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1630,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "11185:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11185:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11184:16:3"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "11224:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11224:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11223:15:3"
            },
            "scope": 1732,
            "src": "11161:129:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1663,
              "nodeType": "Block",
              "src": "11565:125:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1648,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "11575:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1651,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "11605:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1150,
                          "src": "11605:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1649,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "11585:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4911,
                        "src": "11585:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11585:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "11575:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "11575:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1656,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11636:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1659,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "11674:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6522",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6522",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1657,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6876,
                            "src": "11645:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6876_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6552,
                          "src": "11645:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6522_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11645:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1661,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11635:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6522_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 1647,
                  "id": 1662,
                  "nodeType": "Return",
                  "src": "11628:55:3"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 1664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11497:2:3"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "11521:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1643,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "11521:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "11550:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11550:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11520:44:3"
            },
            "scope": 1732,
            "src": "11480:210:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "11876:91:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1673,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "11932:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "11932:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1671,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "11912:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4911,
                          "src": "11912:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11912:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1676,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "11947:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1150,
                        "src": "11947:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1669,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "11893:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "11893:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1668,
                  "id": 1679,
                  "nodeType": "Return",
                  "src": "11886:74:3"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 1681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11837:2:3"
            },
            "returnParameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "11861:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11861:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11860:15:3"
            },
            "scope": 1732,
            "src": "11820:147:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleGriefingWithFees.AgreementStatus",
            "id": 1684,
            "members": [
              {
                "id": 1682,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "11996:13:3"
              },
              {
                "id": 1683,
                "name": "isStaked",
                "nodeType": "EnumValue",
                "src": "12011:8:3"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "11973:48:3"
          },
          {
            "body": {
              "id": 1706,
              "nodeType": "Block",
              "src": "12334:204:3",
              "statements": [
                {
                  "assignments": [
                    1690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1690,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1706,
                      "src": "12344:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12344:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1693,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1691,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "12367:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12367:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12344:33:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1694,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "12391:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12406:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12391:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1704,
                    "nodeType": "Block",
                    "src": "12471:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1701,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "12492:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                              "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12492:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                            "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1688,
                        "id": 1703,
                        "nodeType": "Return",
                        "src": "12485:36:3"
                      }
                    ]
                  },
                  "id": 1705,
                  "nodeType": "IfStatement",
                  "src": "12387:145:3",
                  "trueBody": {
                    "id": 1700,
                    "nodeType": "Block",
                    "src": "12409:56:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1697,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "12430:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                              "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                            }
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12430:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                            "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1688,
                        "id": 1699,
                        "nodeType": "Return",
                        "src": "12423:31:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isStaked: stake is deposited",
            "id": 1707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12286:2:3"
            },
            "returnParameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 1707,
                  "src": "12310:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                    "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1686,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1684,
                    "src": "12310:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12309:24:3"
            },
            "scope": 1732,
            "src": "12259:279:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "12751:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1712,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "12768:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "function () view returns (enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12768:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1714,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "12792:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12792:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "src": "12768:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1711,
                  "id": 1717,
                  "nodeType": "Return",
                  "src": "12761:60:3"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12710:2:3"
            },
            "returnParameters": {
              "id": 1711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1710,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "12736:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12736:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12735:15:3"
            },
            "scope": 1732,
            "src": "12688:140:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1730,
              "nodeType": "Block",
              "src": "13031:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1724,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "13048:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "function () view returns (enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13048:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1726,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "13072:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13072:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "src": "13048:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1723,
                  "id": 1729,
                  "nodeType": "Return",
                  "src": "13041:55:3"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isStaked state\n @return validity bool true if correct state",
            "id": 1731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12990:2:3"
            },
            "returnParameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1722,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1731,
                  "src": "13016:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13016:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13015:15:3"
            },
            "scope": 1732,
            "src": "12973:130:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1733,
        "src": "1549:11556:3"
      }
    ],
    "src": "0:13106:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/agreements/SimpleGriefingWithFees.sol",
    "exportedSymbols": {
      "SimpleGriefingWithFees": [
        1732
      ]
    },
    "id": 1733,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1130,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1131,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 12149,
        "src": "25:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 1132,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 5005,
        "src": "77:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 1133,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 4328,
        "src": "111:38:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 1134,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 5233,
        "src": "150:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/noah/projects/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 1135,
        "nodeType": "ImportDirective",
        "scope": 1733,
        "sourceUnit": 6514,
        "src": "184:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1136,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5004,
              "src": "1584:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5004",
                "typeString": "contract Griefing"
              }
            },
            "id": 1137,
            "nodeType": "InheritanceSpecifier",
            "src": "1584:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1138,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4327,
              "src": "1594:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4327",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 1139,
            "nodeType": "InheritanceSpecifier",
            "src": "1594:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1140,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5232,
              "src": "1609:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5232",
                "typeString": "contract Operated"
              }
            },
            "id": 1141,
            "nodeType": "InheritanceSpecifier",
            "src": "1609:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6513,
              "src": "1619:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6513",
                "typeString": "contract Template"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "1619:8:3"
          }
        ],
        "contractDependencies": [
          3798,
          3867,
          4310,
          4327,
          5004,
          5232,
          6450,
          6513,
          6876
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleGriefingWithFees\n @author Noah Harasz (@ndharasz) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/SimpleGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time.\n             - The counterparty can increase, release, or punish the stake at any time.\n             - The beneficiaries can increase stake at any time\n             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 1732,
        "linearizedBaseContracts": [
          1732,
          6513,
          5232,
          4327,
          5004,
          6450,
          6876,
          3798,
          3867,
          4310
        ],
        "name": "SimpleGriefingWithFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1146,
            "libraryName": {
              "contractScope": null,
              "id": 1144,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12148,
              "src": "1641:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12148",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1635:27:3",
            "typeName": {
              "id": 1145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1654:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1148,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 1732,
            "src": "1668:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$1161_storage",
              "typeString": "struct SimpleGriefingWithFees.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 1147,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1161,
              "src": "1668:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$1161_storage_ptr",
                "typeString": "struct SimpleGriefingWithFees.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleGriefingWithFees.Data",
            "id": 1161,
            "members": [
              {
                "constant": false,
                "id": 1150,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1714:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1149,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1714:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1152,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1738:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1151,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1738:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1154,
                "name": "totalStakeTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1768:24:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1153,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1768:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1156,
                "name": "isReleased",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1802:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1155,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1802:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1160,
                "name": "stakeholders",
                "nodeType": "VariableDeclaration",
                "scope": 1161,
                "src": "1827:41:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 1159,
                  "keyType": {
                    "id": 1157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1827:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 1158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 1732,
            "src": "1692:183:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1177,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1163,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1908:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1165,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1934:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1167,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1958:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1169,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "1988:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1168,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "1988:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1171,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2025:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2048:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4690",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1172,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4690,
                    "src": "2048:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4690",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1175,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "2086:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:208:3"
            },
            "src": "1881:226:3"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "3707:611:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1196,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3747:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1150,
                      "src": "3747:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1199,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "3762:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3747:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1202,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3778:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "3778:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1205,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "3799:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3778:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "3821:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isReleased",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "3821:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3840:5:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3821:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:24:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1214,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "3884:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3904:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3896:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3896:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3884:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1226,
                  "nodeType": "IfStatement",
                  "src": "3880:84:3",
                  "trueBody": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "3908:56:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "3944:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "3922:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5154,
                            "src": "3922:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3922:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "3922:31:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1230,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "4023:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "4031:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "4040:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1233,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "4047:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1227,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "4004:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4798,
                      "src": "4004:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6522_$_t_uint256_$_t_enum$_RatioType_$4690_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "4004:53:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1236,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "4096:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4096:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4115:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4096:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1247,
                  "nodeType": "IfStatement",
                  "src": "4092:87:3",
                  "trueBody": {
                    "id": 1246,
                    "nodeType": "Block",
                    "src": "4118:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1243,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "4159:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1240,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4327,
                              "src": "4132:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4327_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4326,
                            "src": "4132:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4132:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1245,
                        "nodeType": "ExpressionStatement",
                        "src": "4132:36:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1249,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "4243:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "4253:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1251,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "4261:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1252,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "4275:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "4284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1254,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "4291:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1255,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "4302:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4690",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1248,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "4231:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6522_$_t_uint256_$_t_enum$_RatioType_$4690_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,bytes memory)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "EmitStatement",
                  "src": "4226:85:3"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 1259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1193,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6475,
                  "src": "3686:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3686:20:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3473:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3473:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3499:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3523:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3553:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1184,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "3553:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3590:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3613:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4690",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1188,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4690,
                    "src": "3613:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4690",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1259,
                  "src": "3651:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3651:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3463:215:3"
            },
            "returnParameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:3"
            },
            "scope": 1732,
            "src": "3444:874:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1279,
              "nodeType": "Block",
              "src": "4573:175:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1267,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "4638:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4638:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1265,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "4618:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "4618:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4618:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "4610:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "4732:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1273,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "4705:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4327_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4326,
                      "src": "4705:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1278,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:36:3"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 1280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "4543:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4542:23:3"
            },
            "returnParameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4573:0:3"
            },
            "scope": 1732,
            "src": "4522:226:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "5167:522:3",
              "statements": [
                {
                  "assignments": [
                    1288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1288,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5177:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1287,
                        "name": "TokenManager.Tokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6522,
                        "src": "5177:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1294,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5227:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5227:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1289,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "5207:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4911,
                      "src": "5207:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                        "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5177:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1298,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "5288:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1299,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5297:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5297:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5309:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5309:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1303,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "5321:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "5270:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6325,
                      "src": "5270:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:63:3"
                },
                {
                  "assignments": [
                    1307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "name": "currStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5377:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5377:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1314,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "5416:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5425:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5425:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1308,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "5397:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "5397:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5377:59:3"
                },
                {
                  "assignments": [
                    1316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1316,
                      "name": "tokensToAdd",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "5446:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5446:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1324,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1317,
                            "name": "amountToAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "5469:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1318,
                            "name": "currStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1307,
                            "src": "5483:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5469:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5468:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1321,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5496:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "5496:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5468:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5446:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1325,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "5528:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeholders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "5528:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1330,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "5547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5528:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1337,
                          "name": "tokensToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5596:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1331,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "5561:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakeholders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "5561:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1335,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1333,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "5580:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5580:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5561:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11988,
                        "src": "5561:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5561:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5528:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1341,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5618:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "5618:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1347,
                          "name": "tokensToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5670:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1344,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "5643:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "5643:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11988,
                        "src": "5643:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5643:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5618:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:64:3"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 1352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1282,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "5139:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5138:21:3"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5167:0:3"
            },
            "scope": 1732,
            "src": "5116:573:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "6117:1024:3",
              "statements": [
                {
                  "assignments": [
                    1360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1360,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6165:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1359,
                        "name": "TokenManager.Tokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6522,
                        "src": "6165:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1366,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6215:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6215:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1361,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5004,
                        "src": "6195:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4911,
                      "src": "6195:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                        "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6195:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6165:61:3"
                },
                {
                  "assignments": [
                    1368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1368,
                      "name": "currStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6236:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6236:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1375,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1371,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1360,
                        "src": "6275:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1372,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6284:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6284:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1369,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "6256:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "6256:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6256:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6236:59:3"
                },
                {
                  "assignments": [
                    1377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1377,
                      "name": "currTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6305:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6305:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1378,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "6326:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeholders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1160,
                      "src": "6326:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1382,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1380,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12751,
                        "src": "6345:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6345:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6326:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6305:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1385,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "6436:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isReleased",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1156,
                        "src": "6436:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7374616b65206d7573742062652072656c656173656420627920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6454:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b00981be440a38079a2850e5a77e90ce6c8f86ea36a7b4b482af9705c2a6c61e",
                          "typeString": "literal_string \"stake must be released by counterparty or operator\""
                        },
                        "value": "stake must be released by counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b00981be440a38079a2850e5a77e90ce6c8f86ea36a7b4b482af9705c2a6c61e",
                          "typeString": "literal_string \"stake must be released by counterparty or operator\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6428:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "6428:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1391,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "6525:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "6525:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6550:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6525:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f207374616b6520746f6b656e73206c65667420746f2072656465656d",
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6553:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3cf5ed06b20d7bb09b2558385fe27825d80a434ac607c8a3557d23c635c47bd",
                          "typeString": "literal_string \"no stake tokens left to redeem\""
                        },
                        "value": "no stake tokens left to redeem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3cf5ed06b20d7bb09b2558385fe27825d80a434ac607c8a3557d23c635c47bd",
                          "typeString": "literal_string \"no stake tokens left to redeem\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6517:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6517:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "6517:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1399,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "6604:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6621:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6604:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d7573742072656465656d20706f73697469766520616d6f756e74",
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6624:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_309e1b9f8aa9d30797c432b4a60d67bf13fa356da759799ae22874ca82883ca1",
                          "typeString": "literal_string \"must redeem positive amount\""
                        },
                        "value": "must redeem positive amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_309e1b9f8aa9d30797c432b4a60d67bf13fa356da759799ae22874ca82883ca1",
                          "typeString": "literal_string \"must redeem positive amount\""
                        }
                      ],
                      "id": 1398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6596:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1406,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "6672:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1407,
                          "name": "currTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "6690:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6672:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f742072656465656d206d6f7265207374616b65207468616e20796f752068617665",
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6702:40:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dd2856e5e5d73dea0e768688aa0cbfabc1cab167d041612498166b9863b5447",
                          "typeString": "literal_string \"cannot redeem more stake than you have\""
                        },
                        "value": "cannot redeem more stake than you have"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dd2856e5e5d73dea0e768688aa0cbfabc1cab167d041612498166b9863b5447",
                          "typeString": "literal_string \"cannot redeem more stake than you have\""
                        }
                      ],
                      "id": 1405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "6664:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6664:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "6664:79:3"
                },
                {
                  "assignments": [
                    1413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1413,
                      "name": "stakeToRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 1459,
                      "src": "6778:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6778:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1414,
                            "name": "tokensToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "6803:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1415,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "6820:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalStakeTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1154,
                            "src": "6820:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6803:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1418,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6802:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1419,
                      "name": "currStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "6847:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6802:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6778:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1425,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1360,
                        "src": "6885:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1426,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6894:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6894:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6906:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6906:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1430,
                        "name": "stakeToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "6918:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1422,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "6866:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6358,
                      "src": "6866:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6866:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1432,
                  "nodeType": "ExpressionStatement",
                  "src": "6866:66:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1433,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "6974:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakeholders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "6974:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1438,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "6993:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6993:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6974:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1445,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "7042:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1439,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "7007:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakeholders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1160,
                            "src": "7007:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1441,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "7026:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7026:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7007:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12004,
                        "src": "7007:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7007:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6974:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "7067:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStakeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1154,
                      "src": "7067:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "7119:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1452,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "7092:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalStakeTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1154,
                          "src": "7092:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12004,
                        "src": "7092:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7092:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7067:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "7067:67:3"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param tokensToRedeem uint256 amount of stakeTokens (18 decimals) to be redeemed for stake",
            "id": 1460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "name": "tokensToRedeem",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "6086:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6085:24:3"
            },
            "returnParameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6117:0:3"
            },
            "scope": 1732,
            "src": "6065:1076:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1497,
              "nodeType": "Block",
              "src": "7566:336:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1467,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "7626:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7626:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1466,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "7611:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7611:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1472,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "7661:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7661:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1470,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "7641:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "7641:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7641:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7611:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7674:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "7603:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7603:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1478,
                  "nodeType": "ExpressionStatement",
                  "src": "7603:103:3"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "7755:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7755:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1481,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "7772:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1150,
                    "src": "7772:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7755:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1489,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1480,
                            "src": "7854:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1487,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "7834:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4911,
                          "src": "7834:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7834:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "7863:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1492,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12751,
                          "src": "7871:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7871:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "7883:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1484,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6450,
                        "src": "7816:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6450_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6325,
                      "src": "7816:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6522_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7816:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "7816:79:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 1498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "7538:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7537:21:3"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7566:0:3"
            },
            "scope": 1732,
            "src": "7522:380:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1533,
              "nodeType": "Block",
              "src": "8802:255:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1509,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "8862:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8862:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1508,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "8847:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8847:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1514,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "8897:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8897:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1512,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "8877:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "8877:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8877:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8847:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8910:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "8839:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8839:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "ExpressionStatement",
                  "src": "8839:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1521,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "8981:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1524,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12751,
                            "src": "9004:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9004:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1526,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "9016:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1150,
                          "src": "9016:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1528,
                          "name": "punishment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "9030:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1529,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "9042:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1522,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "8988:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_grief",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4877,
                        "src": "8988:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8988:62:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8981:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:69:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 1534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8730:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8730:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8750:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8750:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8729:42:3"
            },
            "returnParameters": {
              "id": 1506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "8788:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8788:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8787:14:3"
            },
            "scope": 1732,
            "src": "8714:343:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1557,
              "nodeType": "Block",
              "src": "9262:181:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1539,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "9322:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9322:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1538,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "9307:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9307:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1544,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12751,
                                "src": "9357:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9357:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1542,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5232,
                              "src": "9337:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5231,
                            "src": "9337:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9337:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9307:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9370:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 1537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "9299:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:103:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1551,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "9413:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$1161_storage",
                          "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                        }
                      },
                      "id": 1553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isReleased",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "9413:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9432:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9413:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "9413:23:3"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime",
            "id": 1558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9252:2:3"
            },
            "returnParameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9262:0:3"
            },
            "scope": 1732,
            "src": "9231:212:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1578,
              "nodeType": "Block",
              "src": "9701:177:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1566,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "9766:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9766:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1564,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "9746:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "9746:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9746:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9779:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "9738:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "9738:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
                        "src": "9862:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1572,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "9835:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 1574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5186,
                      "src": "9835:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9835:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "9835:36:3"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 1579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1579,
                  "src": "9676:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9675:18:3"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9701:0:3"
            },
            "scope": 1732,
            "src": "9650:228:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "10052:169:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1585,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12751,
                              "src": "10117:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10117:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5232,
                            "src": "10097:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5231,
                          "src": "10097:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10097:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10130:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12754,
                        12755
                      ],
                      "referencedDeclaration": 12755,
                      "src": "10089:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1591,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "10186:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5232_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5211,
                      "src": "10186:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:28:3"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 1597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10042:2:3"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10052:0:3"
            },
            "scope": 1732,
            "src": "10017:204:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1605,
              "nodeType": "Block",
              "src": "10408:36:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1602,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "10425:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1150,
                    "src": "10425:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1604,
                  "nodeType": "Return",
                  "src": "10418:19:3"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 1606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10368:2:3"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1606,
                  "src": "10392:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10392:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10391:16:3"
            },
            "scope": 1732,
            "src": "10350:94:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "10693:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1613,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1608,
                      "src": "10710:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1614,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "10720:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10720:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10710:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1612,
                  "id": 1617,
                  "nodeType": "Return",
                  "src": "10703:28:3"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "10639:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10639:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10638:16:3"
            },
            "returnParameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "10678:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10678:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10677:15:3"
            },
            "scope": 1732,
            "src": "10621:117:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1627,
              "nodeType": "Block",
              "src": "10936:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1624,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "10953:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$1161_storage",
                        "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1152,
                    "src": "10953:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1623,
                  "id": 1626,
                  "nodeType": "Return",
                  "src": "10946:25:3"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 1628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10890:2:3"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 1628,
                  "src": "10914:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10914:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10913:22:3"
            },
            "scope": 1732,
            "src": "10866:112:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "11239:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1635,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1630,
                      "src": "11256:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1636,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "11266:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11266:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11256:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1634,
                  "id": 1639,
                  "nodeType": "Return",
                  "src": "11249:34:3"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1630,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "11185:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11185:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11184:16:3"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "11224:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11224:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11223:15:3"
            },
            "scope": 1732,
            "src": "11161:129:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1663,
              "nodeType": "Block",
              "src": "11565:125:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1648,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "11575:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1651,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "11605:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$1161_storage",
                              "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1150,
                          "src": "11605:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1649,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "11585:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4911,
                        "src": "11585:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11585:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6522",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "11575:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "11575:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1656,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11636:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1659,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "11674:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6522",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6522",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1657,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6876,
                            "src": "11645:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6876_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6552,
                          "src": "11645:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6522_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11645:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1661,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11635:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6522_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 1647,
                  "id": 1662,
                  "nodeType": "Return",
                  "src": "11628:55:3"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 1664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11497:2:3"
            },
            "returnParameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "11521:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6522",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1643,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6522,
                    "src": "11521:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6522",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "11550:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11550:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11520:44:3"
            },
            "scope": 1732,
            "src": "11480:210:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "11876:91:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1673,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "11932:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$1161_storage",
                                "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                              }
                            },
                            "id": 1674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "11932:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1671,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "11912:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5004_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4911,
                          "src": "11912:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6522_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11912:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1676,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1148,
                          "src": "11947:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$1161_storage",
                            "typeString": "struct SimpleGriefingWithFees.Data storage ref"
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1150,
                        "src": "11947:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6522",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1669,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "11893:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4310_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4309,
                      "src": "11893:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6522_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1668,
                  "id": 1679,
                  "nodeType": "Return",
                  "src": "11886:74:3"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 1681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11837:2:3"
            },
            "returnParameters": {
              "id": 1668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1667,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "11861:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11861:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11860:15:3"
            },
            "scope": 1732,
            "src": "11820:147:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleGriefingWithFees.AgreementStatus",
            "id": 1684,
            "members": [
              {
                "id": 1682,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "11996:13:3"
              },
              {
                "id": 1683,
                "name": "isStaked",
                "nodeType": "EnumValue",
                "src": "12011:8:3"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "11973:48:3"
          },
          {
            "body": {
              "id": 1706,
              "nodeType": "Block",
              "src": "12334:204:3",
              "statements": [
                {
                  "assignments": [
                    1690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1690,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1706,
                      "src": "12344:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12344:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1693,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1691,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "12367:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12367:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12344:33:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1694,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "12391:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12406:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12391:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1704,
                    "nodeType": "Block",
                    "src": "12471:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1701,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "12492:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                              "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12492:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                            "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1688,
                        "id": 1703,
                        "nodeType": "Return",
                        "src": "12485:36:3"
                      }
                    ]
                  },
                  "id": 1705,
                  "nodeType": "IfStatement",
                  "src": "12387:145:3",
                  "trueBody": {
                    "id": 1700,
                    "nodeType": "Block",
                    "src": "12409:56:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1697,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "12430:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                              "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                            }
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12430:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                            "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1688,
                        "id": 1699,
                        "nodeType": "Return",
                        "src": "12423:31:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isStaked: stake is deposited",
            "id": 1707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12286:2:3"
            },
            "returnParameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 1707,
                  "src": "12310:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                    "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1686,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1684,
                    "src": "12310:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12309:24:3"
            },
            "scope": 1732,
            "src": "12259:279:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "12751:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1712,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "12768:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "function () view returns (enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12768:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1714,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "12792:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12792:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "src": "12768:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1711,
                  "id": 1717,
                  "nodeType": "Return",
                  "src": "12761:60:3"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12710:2:3"
            },
            "returnParameters": {
              "id": 1711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1710,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "12736:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12736:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12735:15:3"
            },
            "scope": 1732,
            "src": "12688:140:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1730,
              "nodeType": "Block",
              "src": "13031:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                      "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1724,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "13048:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "function () view returns (enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13048:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1726,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "13072:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1684_$",
                          "typeString": "type(enum SimpleGriefingWithFees.AgreementStatus)"
                        }
                      },
                      "id": 1727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13072:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1684",
                        "typeString": "enum SimpleGriefingWithFees.AgreementStatus"
                      }
                    },
                    "src": "13048:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1723,
                  "id": 1729,
                  "nodeType": "Return",
                  "src": "13041:55:3"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isStaked state\n @return validity bool true if correct state",
            "id": 1731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12990:2:3"
            },
            "returnParameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1722,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1731,
                  "src": "13016:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13016:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13015:15:3"
            },
            "scope": 1732,
            "src": "12973:130:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1733,
        "src": "1549:11556:3"
      }
    ],
    "src": "0:13106:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  },
  "networks": {},
  "schemaVersion": "2.2.6",
  "updatedAt": "2021-03-31T02:37:24.042Z"
}